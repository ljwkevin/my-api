<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 引入缓存的配置文件properties -->
    <!--<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
        <!--<property name="ignoreResourceNotFound" value="true" />-->
        <!--<property name="ignoreUnresolvablePlaceholders" value="true" />-->
        <!--<property name="locations">-->
            <!--<list>-->
                <!--&lt;!&ndash; 此位置是相对于:部署后的项目根路径 &ndash;&gt;-->
                <!--&lt;!&ndash; <value>/WEB-INF/cache.properties</value> &ndash;&gt;-->
                <!--&lt;!&ndash; 此位置是相对于:文件直接在src 目录下 &ndash;&gt;-->
                <!--&lt;!&ndash; <value>classpath*:cache.properties</value> &ndash;&gt;-->
                <!--&lt;!&ndash; 此位置是相对于:文件在目录下面 &ndash;&gt;-->
                <!--&lt;!&ndash; <value>classpath*:cache/cache.properties</value> &ndash;&gt;-->
                <!--<value>classpath*:/cache/cache.properties</value>-->
                <!--&lt;!&ndash; 此位置是从服务器环境变量中查找名为：XXX 的值(例如：file:D:/test/test.properties) &ndash;&gt;-->
                <!--&lt;!&ndash; <value>${XXX}</value> &ndash;&gt;-->
                <!--&lt;!&ndash; 此位置是相对于:文件系统 &ndash;&gt;-->
                <!--&lt;!&ndash; <value>file:D:/test/test.properties</value> &ndash;&gt;-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <context:property-placeholder ignore-unresolvable="true" file-encoding="utf-8"
                                  location="classpath:application.properties"/>

    <context:component-scan
            base-package="org.activiti,com.yd.activiti">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--数据源-->
    <!--<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->
        <!--<property name="url" value="${jdbc.url}"/>-->
        <!--<property name="driverClassName" value="${jdbc.driver}"/>-->
        <!--<property name="username" value="${jdbc.username}"/>-->
        <!--<property name="password" value="${jdbc.password}"/>-->
    <!--</bean>-->

    <!--数据源-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <!-- Connection Info -->
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <!-- Connection Pooling Info -->
        <property name="initialSize" value="${dbcp.initialSize}"/>
        <property name="maxActive" value="${dbcp.maxActive}"/>
        <property name="maxIdle" value="${dbcp.maxIdle}"/>
        <property name="defaultAutoCommit" value="false"/>
        <!-- 连接Idle一个小时后超时 -->
        <property name="timeBetweenEvictionRunsMillis" value="5000"/>
        <property name="minEvictableIdleTimeMillis" value="5000"/>

    </bean>

    <!--事物管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--配置一个spring提供的对象-->
    <bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
        <property name="dataSource" ref="dataSource"/>
        <property name="transactionManager" ref="transactionManager"/>
        <property name="databaseSchemaUpdate" value="true"/>
        <property name="jobExecutorActivate" value="true"/>
        <!--<property name="history" value="full"/>-->
        <property name="processDefinitionCacheLimit" value="10"/>

        <!-- mail -->
        <property name="mailServerHost" value="localhost"/>
        <property name="mailServerUsername" value="kafeitu"/>
        <property name="mailServerPassword" value="000000"/>
        <property name="mailServerPort" value="2025"/>

        <!-- 生成流程图的字体 -->
        <property name="activityFontName" value="${diagram.activityFontName}"/>
        <property name="labelFontName" value="${diagram.labelFontName}"/>
    </bean>

    <!--创建流程引擎-->
    <bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
      <property name="processEngineConfiguration" ref="processEngineConfiguration"/>
    </bean>

    <!-- 7大接口 -->
    <bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService"/>
    <bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService"/>
    <bean id="formService" factory-bean="processEngine" factory-method="getFormService"/>
    <bean id="identityService" factory-bean="processEngine" factory-method="getIdentityService"/>
    <bean id="taskService" factory-bean="processEngine" factory-method="getTaskService"/>
    <bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService"/>
    <bean id="managementService" factory-bean="processEngine" factory-method="getManagementService"/>

    <!-- 集成REST服务需要的bean -->
    <bean id="restResponseFactory" class="org.activiti.rest.service.api.RestResponseFactory" />
    <bean id="contentTypeResolver" class="org.activiti.rest.common.application.DefaultContentTypeResolver" />


</beans>